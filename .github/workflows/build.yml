name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: mikn-dev
      PLATFORM: linux/amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_NPM_TOKEN }}

      - name: Build and push AMD64
        uses: docker/build-push-action@v4
        with:
          secrets: |
            GH_NPM_TOKEN=${{ secrets.GH_NPM_TOKEN }}
          platforms: ${{ env.PLATFORM }}
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest-amd64
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64

  build-arm64:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: safetychecker
      PLATFORM: linux/arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_NPM_TOKEN }}

      - name: Build and push ARM64
        uses: docker/build-push-action@v4
        with:
          secrets: |
            GH_NPM_TOKEN=${{ secrets.GH_NPM_TOKEN }}
          platforms: ${{ env.PLATFORM }}
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest-arm64
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64

  create-manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_NPM_TOKEN }}

      - name: Create and Push Manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest \
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest-amd64 \
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest-arm64
          docker manifest push ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest

          docker manifest create ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64
          docker manifest push ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}